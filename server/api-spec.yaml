openapi: 3.0.3
info:
  title: hi-helmyl
  description: This is a simple API for storing and retrieving messages.
  version: 1.0.0
servers:
  - url: 'https://localhost:3000'
    description: Local development server
tags:
  - name: Messages
    description: Operations related to messages
paths:
  /message:
    get:
      tags:
        - Messages
      summary: Retrieve all messages stored in the database
      description: Returns a paginated list of messages. Each page contains up to 50 messages. If there are no messages in the database, a 404 error is returned.
      operationId: getMessages
      parameters:
        - name: page
          in: query
          description: Page number for pagination. Each page contains up to 50 messages.
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Number of items per page.
          required: false
          schema:
            type: integer
            default: 50
      responses:
        '200':
          description: Successful operation, returns a list of messages.
          headers:
            X-IP-RateLimit-Limit:
              description: The maximum number of requests that the IP address is permitted to make per hour.
              schema:
                type: integer
            X-IP-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit window for the IP address.
              schema:
                type: integer
            X-IP-RateLimit-Reset:
              description: The time at which the current rate limit window resets in UTC epoch seconds for the IP address.
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentPage:
                    type: integer
                  totalItems:
                    type: integer
                  totalPages:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
              examples:
                example-1:
                  value:
                    currentPage: 1
                    totalItems: 100
                    totalPages: 2
                    items:
                      - id: 1
                        text: "Hello, world!"
                      - id: 2
                        text: "This is a test message."
        '404':
          description: No messages found in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example-1:
                  value:
                    code: 404
                    message: "No messages found in the database."
        '500':
          description: Unexpected error occurred on the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example-1:
                  value:
                    code: 500
                    message: "Unexpected error occurred on the server."
    post:
      tags:
        - Messages
      summary: Create a new message and store it in the database.
      description: Creates a new message with the provided text. The message ID and creation time are automatically generated.
      operationId: createMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
            examples:
              example-1:
                value:
                  text: "This is a new message."
      responses:
        '201':
          description: Message successfully created.
          headers:
            X-IP-RateLimit-Limit:
              description: The maximum number of requests that the IP address is permitted to make per hour.
              schema:
                type: integer
            X-IP-RateLimit-Remaining:
              description: The number of requests remaining in the current rate limit window for the IP address.
              schema:
                type: integer
            X-IP-RateLimit-Reset:
              description: The time at which the current rate limit window resets in UTC epoch seconds for the IP address.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
              examples:
                example-1:
                  value:
                    id: 3
                    message: "Your message has been successfully submitted."
        '400':
          description: The request could not be understood or was missing required parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example-1:
                  value:
                    code: 400
                    message: "The request could not be understood or was missing required parameters."
        '429':
          description: Too many requests. Rate limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example-1:
                  value:
                    code: 429
                    message: "Too many requests. Rate limit exceeded."
        '500':
          description: Unexpected error occurred on the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example-1:
                  value:
                    code: 500
                    message: "Unexpected error occurred on the server."
components:
  schemas:
    Message:
      type: object
      properties:
        id:
          type: integer
          format: int64
        text:
          type: string
      required:
        - text
        - id
        - createdAt
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
      required:
        - code
        - message